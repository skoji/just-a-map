# xtool configuration for JustAMap
version: 1

# Project metadata
project:
  name: JustAMap
  description: A simple real-time updating map application for motorcycle use
  bundle_identifier: com.example.JustAMap
  development_team: XXXXXXXXXX

# Build configurations
configurations:
  debug:
    swift_flags:
      - -Onone
      - -DDEBUG
    build_settings:
      ENABLE_TESTABILITY: "YES"
      ONLY_ACTIVE_ARCH: "YES"
      DEBUG_INFORMATION_FORMAT: "dwarf"
  release:
    swift_flags:
      - -O
      - -whole-module-optimization
    build_settings:
      ENABLE_TESTABILITY: "NO"
      DEBUG_INFORMATION_FORMAT: "dwarf-with-dsym"

# Target configurations
targets:
  JustAMapApp:
    type: application
    platform: iOS
    deployment_target: "17.0"
    info_plist:
      CFBundleDisplayName: Just a Map
      CFBundleShortVersionString: "1.0.0"
      CFBundleVersion: "1"
      UILaunchScreen: {}
      UIApplicationSceneManifest:
        UIApplicationSupportsMultipleScenes: false
        UISceneConfigurations:
          UIWindowSceneSessionRoleApplication:
            - UISceneConfigurationName: Default Configuration
              UISceneDelegateClassName: $(PRODUCT_MODULE_NAME).SceneDelegate
      UIRequiredDeviceCapabilities:
        - armv7
        - location-services
        - gps
      NSLocationWhenInUseUsageDescription: "This app needs your location to show your current position on the map."
      UIBackgroundModes:
        - location
      UISupportedInterfaceOrientations:
        - UIInterfaceOrientationPortrait
      UIRequiresFullScreen: true
      ITSAppUsesNonExemptEncryption: false
    icon_assets: "Sources/JustAMapKit/Resources/Assets.xcassets"
    capabilities:
      - com.apple.Maps.iOS

# Test configuration
testing:
  test_plans:
    - name: AllTests
      targets:
        - JustAMapKitTests
      configuration: debug
      options:
        code_coverage: true
        parallel_testing: true

# Build phases
build_phases:
  pre_build:
    - name: "Check Swift Format"
      script: |
        if which swiftformat > /dev/null; then
          swiftformat --lint Sources Tests
        else
          echo "warning: SwiftFormat not installed"
        fi
  post_build:
    - name: "Generate Documentation"
      script: |
        if which swift-doc > /dev/null; then
          swift-doc generate Sources --module-name JustAMapKit --output docs
        fi

# Development tools
tools:
  swiftformat:
    version: 0.54.0
    config:
      indent: 4
      linebreaks: lf
      semicolons: inline
      commas: inline
      decimalgrouping: 3
      binarygrouping: 4
      indentcase: false
      trimwhitespace: always
      stripunusedargs: closure-only
      wraparguments: preserve
      wrapparameters: preserve
      wrapcollections: preserve
      wrapconditions: preserve
      wrapternary: preserve

# Scripts
scripts:
  build:
    description: "Build the app"
    commands:
      - xtool build --configuration release
  test:
    description: "Run all tests"
    commands:
      - xtool test --test-plan AllTests
  clean:
    description: "Clean build artifacts"
    commands:
      - xtool clean
      - rm -rf .build
  format:
    description: "Format Swift code"
    commands:
      - swiftformat Sources Tests